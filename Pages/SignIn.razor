@page "/signin"
@layout SiginLayout
@inject IAuthenticationService Auth
@inject NavigationManager NavigationManager

<div class="container m-5 p-2 rounded mx-auto bg-light shadow">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@signIn" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <p class="text-danger @((message!=null)?"":"d-none")">@message</p>
            <div class="form-group">
                <label for="username">User name:</label>
                <InputText class="form-control" id="username" @bind-Value="signIn.Username" placeholder="User name" />
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <InputText type="password" class="form-control" id="password" @bind-Value="signIn.Password" placeholder="Password" />
            </div>

            <button disabled="@loading" type="submit" class="btn btn-primary">Login</button>
            
        </EditForm>
    </div>
</div>

@code{
    private AuthenticateModel signIn = new AuthenticateModel();
    private bool loading;
    private string message;
    private async Task HandleValidSubmit()
    {
        loading = true;
        var authResponse = await Auth.Login(signIn);
        await Auth.Initialize();
        loading = false;
        if(authResponse.IsAuthSuccessful)
            //Chuyển hướng sang trang todos
            NavigationManager.NavigateTo("todos");
        //Thông báo lỗi
        message =authResponse.Message;
        //Console.WriteLine(authResponse.Message);
    }
}

